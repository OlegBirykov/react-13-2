{"version":3,"sources":["actions/actionTypes.js","actions/actionCreators.js","components/List.js","components/Details.js","App.js","serviceWorker.js","reducers/list.js","reducers/details.js","api/index.js","sagas/index.js","store/index.js","index.js"],"names":["LIST_REQUEST","LIST_FAILURE","LIST_SUCCESS","DETAILS_REQUEST","DETAILS_FAILURE","DETAILS_SUCCESS","listRequest","type","detailsRequest","id","payload","List","useSelector","state","list","items","loading","error","dispatch","useDispatch","useEffect","className","onClick","viewBox","cx","cy","r","fill","map","o","to","process","name","price","Details","props","match","details","item","params","disabled","value","content","App","path","component","Boolean","window","location","hostname","initialState","listRequestAPI","a","fetch","response","ok","Error","statusText","json","detailsRequestAPI","watchListRequestSaga","handleListRequestSaga","watchDetailsRequestSaga","handleDetailsRequestSaga","saga","takeLatest","retry","data","put","message","action","spawn","reducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f647aebe.chunk.js","sourcesContent":["export const LIST_REQUEST = 'LIST_REQUEST';\nexport const LIST_FAILURE = 'LIST_FAILURE';\nexport const LIST_SUCCESS = 'LIST_SUCCESS';\n\nexport const DETAILS_REQUEST = 'DETAILS_REQUEST';\nexport const DETAILS_FAILURE = 'DETAILS_FAILURE';\nexport const DETAILS_SUCCESS = 'DETAILS_SUCCESS';\n","import {\n  LIST_REQUEST,\n  LIST_FAILURE,\n  LIST_SUCCESS,\n  DETAILS_REQUEST,\n  DETAILS_FAILURE,\n  DETAILS_SUCCESS,\n} from './actionTypes';\n\nexport const listRequest = () => ({\n  type: LIST_REQUEST,\n});\n\nexport const listFailure = error => ({\n  type: LIST_FAILURE,\n  payload: { error },\n});\n\nexport const listSuccess = items => ({\n  type: LIST_SUCCESS,\n  payload: { items },\n});\n\nexport const detailsRequest = id => ({\n  type: DETAILS_REQUEST,\n  payload: { id },\n});\n\nexport const detailsFailure = error => ({\n  type: DETAILS_FAILURE,\n  payload: { error },\n});\n\nexport const detailsSuccess = item => ({\n  type: DETAILS_SUCCESS,\n  payload: { item },\n});\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { listRequest } from '../actions/actionCreators';\n\nfunction List() {\n  const { items, loading, error } = useSelector(state => state.list);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(listRequest());\n  }, [dispatch]);\n\n  const handleError = () => {\n    dispatch(listRequest());\n  }\n  \n  if (error) {\n    return (\n      <div className=\"error\">\n        <p className=\"error-text\">{error}</p>\n        <button className=\"error-button\" onClick={handleError}>Повторить запрос</button>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <svg className=\"spinner\" viewBox=\"0 0 50 50\">\n        <circle className=\"spinner-circle ServiceList-spinner-circle\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\"></circle>\n      </svg>\n    );\n  }\n\n  return (\n    <ul className=\"List\">\n      {items.map(o => (\n        <li className=\"List-item\" key={o.id}>\n          <Link to={`${process.env.PUBLIC_URL}/${o.id}/details`} className=\"List-item-link\">\n            {`${o.name}: ${o.price} руб.`}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default List;\n","import {useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { detailsRequest } from '../actions/actionCreators';\n\nfunction Details(props) {\n  const { match } = props;\n  const { item, loading, error } = useSelector(state => state.details);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(detailsRequest(match.params.id));\n  }, [dispatch, match.params.id]);\n\n  const handleError = () => {\n    dispatch(detailsRequest(match.params.id));\n  }\n\n  if (error) {\n    return (\n      <div className=\"error\">\n        <p className=\"error-text\">{error}</p>\n        <button className=\"error-button\" onClick={handleError}>Повторить запрос</button>\n      </div>\n    )\n  }\n\n  if (loading) {\n    return (\n      <svg className=\"spinner\" viewBox=\"0 0 50 50\">\n        <circle className=\"spinner-circle ServiceList-spinner-circle\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\"></circle>\n      </svg>\n    );\n  }\n\n  return (\n    <div className=\"Details\">\n      <label>\n        Название\n        <input name='name' disabled value={item.name} />\n      </label>\n      <label>\n        Стоимость\n        <input name='price' disabled value={item.price} />\n      </label>\n      <label>\n        Описание\n        <input name='content' disabled value={item.content} />\n      </label>\n      <div className=\"Details-footer\">\n        <Link to={process.env.PUBLIC_URL} className=\"Details-button\">\n          {'<< Назад к списку'}\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Details;\n","import { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport List from './components/List';\nimport Details from './components/Details';\n\nfunction App() { \n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path={process.env.PUBLIC_URL + '/:id([0-9]+)/details'} component={Details} />\n          <Route path={process.env.PUBLIC_URL} component={List} />\n          <Redirect to={process.env.PUBLIC_URL} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  LIST_REQUEST,\n  LIST_FAILURE,\n  LIST_SUCCESS,\n} from '../actions/actionTypes'\n\nconst initialState = {\n  items: [],\n  loading: false,\n  error: null,\n};\n\nexport default function listReducer(state = initialState, action) {\n  switch (action.type) {\n    case LIST_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n      \n    case LIST_FAILURE:\n      const { error } = action.payload;\n      return {\n        ...state,\n        loading: false,\n        error,\n      };\n      \n    case LIST_SUCCESS:\n      const { items } = action.payload;\n      return {\n        ...state,\n        items,\n        loading: false,\n        error: null,\n      };\n    \n    default:\n      return state;\n  }\n}\n","import {\n  DETAILS_REQUEST,\n  DETAILS_FAILURE,\n  DETAILS_SUCCESS,\n} from '../actions/actionTypes'\n\nconst initialState = {\n  item: { id: '', name: '', price: '', content: '' },\n  loading: false,\n  error: null,\n};\n\nexport default function detailReducer(state = initialState, action) {\n  switch (action.type) {\n    case DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n      \n    case DETAILS_FAILURE:\n      const { error } = action.payload;\n      return {\n        ...state,\n        loading: false,\n        error,\n      };\n      \n    case DETAILS_SUCCESS:\n      const { item } = action.payload;\n      return {\n        ...state,\n        item,\n        loading: false,\n        error: null,\n      };\n    \n    default:\n      return state;\n  }\n}\n","export const listRequestAPI = async () => {\n  const response = await fetch(process.env.REACT_APP_SERVICES_URL);\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  return await response.json();\n}\n\nexport const detailsRequestAPI = async (id) => {\n  const response = await fetch(`${process.env.REACT_APP_SERVICES_URL}/${id}`);\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  return await response.json();\n}","import { takeLatest, put, spawn, retry } from 'redux-saga/effects';\nimport { listSuccess, listFailure, detailsSuccess, detailsFailure } from '../actions/actionCreators';\nimport { LIST_REQUEST, DETAILS_REQUEST } from '../actions/actionTypes';\nimport { listRequestAPI, detailsRequestAPI } from '../api/index';\n\n// watcher\nfunction* watchListRequestSaga() {\n  yield takeLatest(LIST_REQUEST, handleListRequestSaga);\n}\n\n// worker\nfunction* handleListRequestSaga() {\n  try {\n    const retryCount = 3;\n    const retryDelay = 1000;\n    const data = yield retry(retryCount, retryDelay, listRequestAPI);\n    yield put(listSuccess(data));\n  } catch (e) {\n    yield put(listFailure(e.message));\n  }\n}\n\n// watcher\nfunction* watchDetailsRequestSaga() {\n  yield takeLatest(DETAILS_REQUEST, handleDetailsRequestSaga);\n}\n\n// worker\nfunction* handleDetailsRequestSaga(action) {\n  try {\n    const retryCount = 3;\n    const retryDelay = 1000;\n    const data = yield retry(retryCount, retryDelay, detailsRequestAPI, action.payload.id);\n    yield put(detailsSuccess(data));\n  } catch (e) {\n    yield put(detailsFailure(e.message));\n  }\n}\n\nexport default function* saga() {\n  yield spawn(watchListRequestSaga);\n  yield spawn(watchDetailsRequestSaga);\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport listReducer from '../reducers/list';\nimport detailsReducer from '../reducers/details';\nimport saga from '../sagas';\n\nconst reducer = combineReducers({\n  list: listReducer,\n  details: detailsReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(reducer, composeEnhancers(\n  applyMiddleware(sagaMiddleware)\n));\n\nsagaMiddleware.run(saga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}